apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  # This will be the name of the application in the ArgoCD UI
  name: loki-stack
  namespace: argocd
spec:
  project: default
  source:
    # Pointing to the official Grafana Helm chart repository
    repoURL: https://grafana.github.io/helm-charts
    # The name of the chart for the Loki stack
    chart: loki
    # Pinning to a specific version for predictable deployments
    targetRevision: 6.5.1
    helm:
      # These values configure the Loki Helm chart for a simple setup
      values: |
        loki:
          # Use the efficient single binary mode, perfect for K3s
          deploymentMode: SingleBinary
          # For a local/training setup, auth can be disabled for simplicity
          auth_enabled: false
          # Configure Loki to use a PersistentVolumeClaim for storage
          storage:
            type: 'filesystem'
            filesystem:
              # This will create a PVC for log storage
              pvc:
                # Set the desired size for the log volume
                size: 10Gi
                # Specify 'longhorn' as the storage class
                storageClassName: longhorn
          # This section enables the service and exposes it via a LoadBalancer
          service:
            type: LoadBalancer
            port: 3100

        # The gateway is not needed for single binary mode
        gateway:
          enabled: false

        # --- FIX ---
        # Explicitly disable scalable components to satisfy chart validation
        backend:
          enabled: false
        read:
          enabled: false
        write:
          enabled: false

  destination:
    # Deploy Loki into its own dedicated namespace
    namespace: loki-stack
    server: https://kubernetes.default.svc
  syncPolicy:
    # Standard GitOps sync policy
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      # This tells ArgoCD to create the 'loki-stack' namespace if it doesn't exist
      - CreateNamespace=true

