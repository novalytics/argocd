apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cloudflare-tunnel
  namespace: argocd
spec:
  project: default
  source:
    # We are using a generic chart that can deploy raw Kubernetes manifests.
    repoURL: https://charts.bitnami.com/bitnami
    chart: raw
    targetRevision: 1.3.0
    helm:
      # The 'resources' key is used by the 'raw' chart.
      # We provide your entire Deployment manifest here.
      values: |
        resources:
          - apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: cloudflared-deployment
              # This deployment will be created in the namespace specified in spec.destination
              namespace: cloudflare
            spec:
              replicas: 2
              selector:
                matchLabels:
                  pod: cloudflared
              template:
                metadata:
                  labels:
                    pod: cloudflared
                spec:
                  securityContext:
                    sysctls:
                      - name: net.ipv4.ping_group_range
                        value: "65532 65532"
                  containers:
                    - image: cloudflare/cloudflared:latest
                      name: cloudflared
                      env:
                        - name: TUNNEL_TOKEN
                          valueFrom:
                            secretKeyRef:
                              # Using the secret name we created earlier
                              name: cloudflared-token
                              key: token
                      command:
                        - cloudflared
                        - tunnel
                        - --no-autoupdate
                        - --loglevel
                        - debug
                        - --metrics
                        - 0.0.0.0:2000
                        - run
                        # --- FIXED --- Added the tunnel name here
                        - k3s
                      livenessProbe:
                        httpGet:
                          path: /ready
                          port: 2000
                        failureThreshold: 1
                        initialDelaySeconds: 10
                        periodSeconds: 10
  destination:
    server: https://kubernetes.default.svc
    namespace: cloudflare
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true

