# ===================================================================
# Namespace for all Grafana training environments
# ===================================================================
apiVersion: v1
kind: Namespace
metadata:
  name: grafana-training

---
# ===================================================================
# Shared Secret for Grafana Admin Password
# ===================================================================
apiVersion: v1
kind: Secret
metadata:
  name: grafana-admin-secret
  namespace: grafana-training
stringData:
  # This environment variable sets the admin password for all Grafana instances
  GF_SECURITY_ADMIN_PASSWORD: "grafana"

---
# ===================================================================
# Grafana Instance 1
# ===================================================================
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc-1
  namespace: grafana-training
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-deployment-1
  namespace: grafana-training
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/instance: grafana-1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/instance: grafana-1
    spec:
      securityContext:
        fsGroup: 472
        runAsUser: 472
        runAsGroup: 472
      containers:
        - name: grafana
          image: grafana/grafana:12.1.1
          ports:
            - containerPort: 3000
              name: http
          envFrom:
            - secretRef:
                name: grafana-admin-secret
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 60
            periodSeconds: 20
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-pvc-1
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service-1
  namespace: grafana-training
spec:
  type: LoadBalancer
  selector:
    app.kubernetes.io/instance: grafana-1
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000

---
# ===================================================================
# Grafana Instance 2
# ===================================================================
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc-2
  namespace: grafana-training
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-deployment-2
  namespace: grafana-training
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/instance: grafana-2
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/instance: grafana-2
    spec:
      securityContext:
        fsGroup: 472
        runAsUser: 472
        runAsGroup: 472
      containers:
        - name: grafana
          image: grafana/grafana:12.1.1
          ports:
            - containerPort: 3000
              name: http
          envFrom:
            - secretRef:
                name: grafana-admin-secret
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 60
            periodSeconds: 20
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-pvc-2
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service-2
  namespace: grafana-training
spec:
  type: LoadBalancer
  selector:
    app.kubernetes.io/instance: grafana-2
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000

---
# ===================================================================
# Grafana Instance 3
# ===================================================================
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc-3
  namespace: grafana-training
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-deployment-3
  namespace: grafana-training
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/instance: grafana-3
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/instance: grafana-3
    spec:
      securityContext:
        fsGroup: 472
        runAsUser: 472
        runAsGroup: 472
      containers:
        - name: grafana
          image: grafana/grafana:12.1.1
          ports:
            - containerPort: 3000
              name: http
          envFrom:
            - secretRef:
                name: grafana-admin-secret
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 60
            periodSeconds: 20
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-pvc-3
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service-3
  namespace: grafana-training
spec:
  type: LoadBalancer
  selector:
    app.kubernetes.io/instance: grafana-3
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000

---
# ===================================================================
# Grafana Instance 4
# ===================================================================
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc-4
  namespace: grafana-training
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-deployment-4
  namespace: grafana-training
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/instance: grafana-4
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/instance: grafana-4
    spec:
      securityContext:
        fsGroup: 472
        runAsUser: 472
        runAsGroup: 472
      containers:
        - name: grafana
          image: grafana/grafana:12.1.1
          ports:
            - containerPort: 3000
              name: http
          envFrom:
            - secretRef:
                name: grafana-admin-secret
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 60
            periodSeconds: 20
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-pvc-4
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service-4
  namespace: grafana-training
spec:
  type: LoadBalancer
  selector:
    app.kubernetes.io/instance: grafana-4
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000

